ModSecurity has two types of logs:

- An audit log. For every transaction that’s blocked, ModSecurity provides detailed logs about the transaction and why it was blocked.
- A debug log. When turned on, this log keeps extensive information about everything that ModSecurity does.

Audit Log

The ModSecurity audit log is partitioned into sections. This makes it easier to scan the log and find the information you’re looking for. The table below outlines what each section contains:
Section	Description
A	Audit log header (mandatory)
B	Request headers
C	Request body
D	Reserved
E	Response body
F	Response headers
G	Reserved
H	Audit log trailer, which contains additional data
I	Compact request body alternative (to part C), which excludes files
J	Information on uploaded files
K	Contains a list of all rules that matched for the transaction
Z	Final boundary (mandatory)
Each transaction that triggers an audit log entry will have any or all of the above sections logged. You can configure which sections are logged.

The meaning of each section is described below.

1. In this section we can see the Date and Time of the log, unique ID (which was identified through the error log) and the source and destination IP address with the Port No.

2. It is the request we get from the client. It plays a very important role in the analysis of the root cause of the attacks. In our scenario, we can see the user is hitting the server through the IP address that can be seen in the Host field.

3. It is the response of the server which was sent by the server. The OWASP Mod Security rule won’t allow host to be an IP address, that’s why the server has send the 403 Forbidden error to the user.

4. It simply gives a copy of the error log.


Debug logs
Debug logs look like the same as the error logs, but these logs are used for debugging purposes. We can say that it is going to be our primary troubleshooting tool. We can enable the debug logs by adding some line of code in whitelist.conf file.
In the production environment, we want to minimize the audit logs, as too much logging will affect the performance. The recommended debug log level for production is 3, which will duplicate logs which you will also see in apache’s error log. The possible values for the debug log level are:

0: No logging
1: errors
2: warnings
3: notices
4: details of how transactions are handled
5: as above, but including information about each piece of information handled
6: log everything
As of now, we are using Debug Log Level 3. Other options may be used according to the need.

We need the below information from logs on our dashboard:

Client IP Address
Attack Request
Attack Name
Attack Pattern (Payloads)
Attack URL